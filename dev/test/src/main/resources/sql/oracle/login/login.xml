<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="login">
    <!-- user info 조회 -->
    <select id="selectUserInfo" parameterType="hashmap" resultType="hashmap">
        SELECT
            T1.EMPL_NO AS USER_NO,
            T1.EMPL_NAME as USER_NAME,
            T1.USER_ID as USER_ID,
            T1.USER_PWD as USER_PWD,
            T1.SALT as SALT,
            T1.EMPL_DUTY as USER_DUTY,
            T1.IS_SYSTEM as IS_SYSTEM,
            T1.AVAILABLE as USE_YN,
            T1.ORG_ID as ORG,
            nvl(TO_CHAR(T3.MOD_DATE, 'yyyy-MM-dd'), '1900-01-01') as PASSWORD_MOD_DATE,
            NVL(T1.IS_LOGIN, 'N') as IS_LOGIN,
            NVL(T2.FAIL_CNT, '0') as FAIL_CNT
        FROM
            T_COM_EMPL_INFO T1,
            T_COM_EMPL_LOGIN_FAIL T2,
            (SELECT EMPL_NO, MAX(MOD_DATE) AS MOD_DATE FROM T_COM_PASSWORD_LOG GROUP BY EMPL_NO )T3
        WHERE
            1=1
            AND T1.EMPL_NO = T2.EMPL_NO(+)
            AND T1.EMPL_NO = T3.EMPL_NO(+)
            AND T1.USER_ID = #{userId}
            AND T1.AVAILABLE = 'Y'
    </select>

    <!-- 비밀번호 입력 실패 횟수 업데이트 -->
    <update id="updateUserFailedCount" parameterType="hashmap">
        MERGE INTO T_COM_EMPL_LOGIN_FAIL T1
        USING DUAL
            ON (T1.EMPL_NO = #{userNo})
        WHEN MATCHED THEN
            UPDATE SET T1.FAIL_CNT = #{failCnt}
                      ,T1.MOD_EMPL_NO = #{userNo}
                      ,T1.MOD_DATE = SYSDATE
        WHEN NOT MATCHED THEN
            INSERT (T1.EMPL_NO, T1.FAIL_CNT, T1.MOD_EMPL_NO, T1.MOD_DATE)
            VALUES (#{userNo}, #{failCnt}, #{userNo}, SYSDATE)
    </update>
    <update id="updateUserLoginInfo" parameterType="hashmap">
        UPDATE T_COM_EMPL_INFO
            SET IS_LOGIN = 'Y',
                LAST_LOGIN_DATE = SYSDATE,
                MOD_DATE = SYSDATE,
                MOD_EMPL_NO = #{userNo}
        WHERE EMPL_NO = #{userNo}
    </update>


    <select id="selectAdConfig" resultType="hashmap" parameterType="hashmap">
        SELECT
            AD_KIND,
            AD_PROTOCOL,
            AD_SERVER,
            AD_PORT,
            AD_OBJECTNAME,
            AD_BRANCH,
            AD_DOMAIN
        FROM
            T_COM_LOGIN_CONF_INFO
        WHERE
            1=1
            AND CUSTOMER_TYPE = #{customerType}
    </select>

    <select id="selectSsoConfig" resultType="hashmap" parameterType="hashmap">
        SELECT
            SSO_KIND,
            SSO_HEADER
        FROM
            T_COM_LOGIN_CONF_INFO
        WHERE
            1=1
            AND CUSTOMER_TYPE = #{customerType}
    </select>

    <insert id="insertLoginConfig" parameterType="hashmap">
        MERGE INTO T_COM_LOGIN_CONF_INFO
        USING DUAL
        ON (CUSTOMER_TYPE = #{customerType})
        WHEN MATCHED THEN
            UPDATE SET
            MOD_DATE = SYSDATE
            ,MOD_EMPL_NO = #{loginUserNo}
            <if test="adKind != ''">
            ,AD_KIND = #{adKind}
            ,AD_PROTOCOL = #{adProtocol}
            ,AD_SERVER = #{adServer}
            ,AD_PORT = #{adPort}
            ,AD_OBJECTNAME = #{adObjectname}
            ,AD_BRANCH = NVL(#{adBranch}, null)
            ,AD_DOMAIN = NVL(#{adDomain}, null)
            </if>
            <if test="ssoKind != ''">
            ,SSO_KIND = #{ssoKind}
            ,SSO_HEADER = #{ssoHeader}
            </if>


        WHEN NOT MATCHED THEN
            INSERT(CUSTOMER_TYPE,   AD_KIND,         SSO_KIND,    AD_PROTOCOL,    AD_SERVER,
                   AD_PORT,         AD_OBJECTNAME,   AD_BRANCH,   AD_DOMAIN,      SSO_HEADER,
                   LOG_DATE,        LOG_EMPL_NO                                             )
            VALUES(#{customerType}, NVL(#{adKind}, 'N'),  NVL(#{ssoKind},'N'),  #{adProtocol},  #{adServer},
                   #{adPort},       #{adObjectname}, #{adBranch}, #{adDomain},    #{ssoHeader},
                   SYSDATE,         #{loginUserNo}                                           )

    </insert>
    <insert id="insertLoginConfigHistory" parameterType="hashmap">
        INSERT INTO T_COM_LOGIN_CONF_INFO_HIS
        (
            CUSTOMER_TYPE,   AD_KIND,         SSO_KIND,    AD_PROTOCOL,    AD_SERVER,
            AD_PORT,         AD_OBJECTNAME,   AD_BRANCH,   AD_DOMAIN,      SSO_HEADER,
            LOG_DATE,        LOG_EMPL_NO
        )
        VALUES
        (
            #{customerType}, NVL(#{adKind}, ' '),       NVL(#{ssoKind},' '),  #{adProtocol},  #{adServer},
            #{adPort},       #{adObjectname}, #{adBranch}, #{adDomain},    #{ssoHeader},
            SYSDATE,         #{loginUserNo}
        )
    </insert>
</mapper>